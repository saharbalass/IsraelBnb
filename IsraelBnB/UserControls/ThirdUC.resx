<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>